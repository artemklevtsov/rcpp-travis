// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Cpp_to_http_date
Rcpp::CharacterVector Cpp_to_http_date(const Rcpp::Datetime& x);
RcppExport SEXP _rcpptravis_Cpp_to_http_date(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const Rcpp::Datetime& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpp_to_http_date(x));
    return rcpp_result_gen;
END_RCPP
}
// Cpp_from_http_date
Rcpp::RObject Cpp_from_http_date(const std::string& x);
RcppExport SEXP _rcpptravis_Cpp_from_http_date(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const std::string& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpp_from_http_date(x));
    return rcpp_result_gen;
END_RCPP
}
// format_cookies
Rcpp::CharacterVector format_cookies(Rcpp::ListOf<Rcpp::List> cookies);
RcppExport SEXP _rcpptravis_format_cookies(SEXP cookiesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::List> >::type cookies(cookiesSEXP);
    rcpp_result_gen = Rcpp::wrap(format_cookies(cookies));
    return rcpp_result_gen;
END_RCPP
}
// do_stop_impl
void do_stop_impl();
RcppExport SEXP _rcpptravis_do_stop_impl() {
BEGIN_RCPP
    do_stop_impl();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rcpptravis_Cpp_to_http_date", (DL_FUNC) &_rcpptravis_Cpp_to_http_date, 1},
    {"_rcpptravis_Cpp_from_http_date", (DL_FUNC) &_rcpptravis_Cpp_from_http_date, 1},
    {"_rcpptravis_format_cookies", (DL_FUNC) &_rcpptravis_format_cookies, 1},
    {"_rcpptravis_do_stop_impl", (DL_FUNC) &_rcpptravis_do_stop_impl, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_rcpptravis(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
